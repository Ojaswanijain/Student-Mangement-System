import java.io.*;
import java.util.*;

class Student Management System
 {
    private String name;
    private int rollNumber;
    private String grade;

    public Student(String name, int rollNumber, String grade) 
    {
        this.name = name;
        this.rollNumber = rollNumber;
        this.grade = grade;
    }
     public String getName() 
     {
        return name;
     }

    public void setName(String name)
     {
        this.name = name;
     }

    public int getRollNumber() 
    {
        return rollNumber;
    }

    public void setRollNumber(int rollNumber) 
    {
        this.rollNumber = rollNumber;
    }

    public String getGrade()
    {
        return grade;
    }

    public void setGrade(String grade) 
    {
        this.grade = grade;
    }

    @Override
    public String toString()
    {
        return "Student{" +
                "name='" + name + '\'' +
                ", rollNumber=" + rollNumber +
                ", grade='" + grade + '\'' +
                '}';
    }
}

class StudentManagementSystem
 {
    private List<Student> students;
    private final String dataFilePath = "students.dat";

    public StudentManagementSystem()
    {
        students = new ArrayList<>();
        loadStudents();
    }

    public void addStudent(Student student)
    {
        students.add(student);
        saveStudents();
    }

    public void removeStudent(int rollNumber) 
    {
        Iterator<Student> iterator = students.iterator();
        while (iterator.hasNext())
        {
            Student student = iterator.next();
            if (student.getRollNumber() == rollNumber)
             {
                iterator.remove();
                saveStudents();
                return;
             }
         }
        System.out.println("Student with roll number " + rollNumber + " not found.");
    }

    public Student searchStudent(int rollNumber)
     {
        for (Student student : students)
          {
            if (student.getRollNumber() == rollNumber) 
            {
                return student;
            }
          }
        return null;
     }

    public void displayAllStudents() 
     {
        for (Student student : students)
        {
            System.out.println(student);
        }
     }

    private void saveStudents()
      {
        try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(dataFilePath))) 
        {
            outputStream.writeObject(students);
        } catch (IOException e)
          {
            e.printStackTrace();
          }
      }

    @SuppressWarnings("unchecked")
    private void loadStudents()
     {
        try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(dataFilePath))) 
        {
            students = (List<Student>) inputStream.readObject();
        } catch (IOException | ClassNotFoundException e)
          {
            
          }
    }
}

public class Main2 
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        StudentManagementSystem managementSystem = new StudentManagementSystem();

        while (true) 
        {
            System.out.println("\nStudent Management System Menu:");
            System.out.println("1. Add Student");
            System.out.println("2. Remove Student");
            System.out.println("3. Search Student");
            System.out.println("4. Display All Students");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character

            switch (choice)
             {
                case 1:
                    System.out.print("Enter student name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter roll number: ");
                    int rollNumber = scanner.nextInt();
                    scanner.nextLine(); // Consume newline character
                    System.out.print("Enter grade: ");
                    String grade = scanner.nextLine();
                    managementSystem.addStudent(new Student(name, rollNumber, grade));
                    break;
                case 2:
                    System.out.print("Enter roll number of student to remove: ");
                    int rollToRemove = scanner.nextInt();
                    managementSystem.removeStudent(rollToRemove);
                    break;
                case 3:
                    System.out.print("Enter roll number of student to search: ");
                    int rollToSearch = scanner.nextInt();
                    Student foundStudent = managementSystem.searchStudent(rollToSearch);
                    if (foundStudent != null)
                    {
                        System.out.println("Student found:");
                        System.out.println(foundStudent);
                     } else
                      {
                        System.out.println("Student not found.");
                      }
                    break;
                case 4:
                    System.out.println("All Students:");
                    managementSystem.displayAllStudents();
                    break;
                case 5:
                    System.out.println("Exiting the application.");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
